---
# Workaround for https://github.com/CiscoCloud/mantl/issues/161
- name: install latest device-mapper-libs
  sudo: yes
  yum:
    name: device-mapper-libs
    state: latest
  tags:
    - docker
    - bootstrap

- name: install docker packages
  sudo: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - docker
    - docker-selinux
  tags:
    - docker
    - bootstrap

- name: check if docker storage already set up with devicemapper
  sudo: yes
  shell: "test -f /etc/sysconfig/docker-storage-setup && . /etc/sysconfig/docker-storage-setup && echo ${STORAGE_DRIVER:-NOT_SET}"
  register: docker_storage_already_set_up
  tags:
    - disk
    - docker

- name: set docker_configure_lvm
  set_fact:
    docker_configure_lvm: '{{ docker_lvm_backed|bool and docker_storage_driver in ["btrfs", "overlay"] and docker_storage_already_set_up.stdout in ["NOT_SET", "btrfs", "overlay"] }}'
  tags:
    - disk
    - docker

- name: create backing storage volume for docker storage
  sudo: yes
  lvol:
    vg: "{{ volume_group_name }}"
    lv: "{{ docker_volume_name }}"
    size: "{{ docker_volume_size }}"
  when: docker_configure_lvm|bool
  tags:
    - disk
    - docker

- name: create backing storage filesystem for docker storage
  sudo: yes
  filesystem:
    dev: "{{ docker_volume_device }}"
    fstype: "{{ docker_volume_fs_type }}"
    opts: "{{ docker_volume_fs_opts }}" 
  when: docker_configure_lvm|bool
  tags:
    - disk
    - docker

- name: create mount point for docker storage
  sudo: yes
  file:
    state: directory
    name: "{{ docker_volume_mount }}"
    mode: 0755
  when: docker_configure_lvm|bool
  tags:
    - disk
    - docker

- name: mount docker storage
  sudo: yes
  mount:
    state: mounted
    name: "{{ docker_volume_mount }}"
    fstype: "{{ docker_volume_fs_type }}"
    src: "{{ docker_volume_device }}"
    dump: 1
    passno: 2
  when: docker_configure_lvm|bool
  tags:
    - disk
    - docker

- name: setup docker storage
  sudo: yes
  lineinfile:
    dest: /etc/sysconfig/docker-storage-setup
    regexp: "^{{ item.var }}=.*"
    line: "{{ item.var }}={{ item.value }}"
    state: present
    create: yes
  with_items:
    - var: STORAGE_DRIVER
      value: "{{ docker_storage_driver }}"
    - var: DATA_SIZE
      value: "{{ docker_lvm_data_volume_size }}"
    - var: VG
      value: "{{ volume_group_name }}"
    - var: MIN_DATA_SIZE
      value: "{{ docker_lvm_data_volume_size_min }}"
    - var: AUTO_EXTEND_POOL
      value: "{{ docker_lvm_auto_extend_pool }}"
  when: docker_lvm_backed|bool and docker_storage_already_set_up.stdout == "NOT_SET"
  tags:
    - docker

- include: lvm.yml
  when: docker_lvm_backed|bool

- name: create rsyslog.d
  sudo: yes
  file:
    dest: /etc/rsyslog.d
    state: directory
  tags:
    - docker

- name: create docker entry for syslogd
  sudo: yes
  copy:
    dest: /etc/rsyslog.d/10-docker.conf
    content: |
      # Docker logging
      :syslogtag, isequal, "docker:"  /var/log/docker/docker.log
      & ~
  notify:
    - restart rsyslog
  tags:
    - docker


- name: configure docker consul dns
  sudo: yes
  lineinfile:
    dest: /etc/sysconfig/docker
    regexp: ^OPTIONS=
    line: OPTIONS='{% if docker_selinux_enabled %}--selinux-enabled {% endif %}--dns {{ private_ipv4 }} --dns-search service.{{ consul_dns_domain }} {% if kube_build is defined %}--dns-search {{ cluster_name }}{% endif %} --log-driver=syslog'
    state: present
    create: yes
  notify:
    - restart docker
  tags:
    - docker

- name: ensure docker config dir exists
  sudo: yes
  file:
    path: /root/.docker
    state: directory
  tags:
    - docker

- name: setup private docker registry credentials
  sudo: yes
  when: do_private_docker_registry
  template:
    src: config.json.j2
    dest: /root/.docker/config.json
  tags:
    - docker
  register: docker_registry_credentials

- name: add docker registry credentials to /etc/
  sudo: yes
  when: do_private_docker_registry and docker_registry_credentials.changed
  command: tar cvzf /etc/docker.tar.gz .docker
  args:
    chdir: /root
  tags:
    - docker
    - skip_ansible_lint

- name: enable docker
  sudo: yes
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker
    - bootstrap # needed to install Docker images during bootstrap
